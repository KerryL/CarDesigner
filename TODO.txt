Use namespace
Think through file structure/organization
Use LibPlot2D
Write Plugin abstract class and test class
Re-structure core to include:
    - Abstract CarSubSystem class
        - What to do with things like tires, which are a component but we also want to derive from?
            - Include Tire (subsystem), which allows user to specify which TireModel (abstract) to include
            - So we need a TireModel abstract class and RegisterTireModel method (register with tire component?)
    - Car with RegisterSubsystem method
    - Abstract Analyis class
    - Gui "manager" class with RegisterAnalysis
    - Better separation of GUI and calculations
- User-definable unit conversions?  How slow would it get?
- Single makefile and makefile.inc that can build multiple targets (core, gui, application?)
    
Code Quality Review:
- Use unique_ptr
- Use for ( a : b)
- Use STL instead of roll-your-own
- Use explicit for single arg constructors
- Rule of 5
- Newline at end of file
- Consistent headers
- Doxygen comments
- Use of virtual/override/final
- NULL vs nullptr
- enum class vs enum
- In-header initialization
- Order of includes (local first)
- Reduce or eliminate wx classes in core
- Doxygen comments
- Add exception safety info for all functions
- Use m prefix for members